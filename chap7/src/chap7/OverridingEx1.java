package chap7;
/*
 * 오버라이딩 예제
 * 	오버라이딩: 반드시 상속관계에서 나타남. 매서드의 재정의
 *  		 부모 클래스의 메서드를 자손 클래스에서 재정의함. 
 *  	조건: 부모 클래스 메서드의 선언부와 자손 클래스 메서드의 선언부가 같아야 함.
 *  		 단, 접근 제어자는 넓은 범위로 가능하고, 예외처리는 좁은 범위로 가능함.
 *  
 *  
 * 	비교			│	오버 로딩 						│	오버 라이딩
 * ─────────────┼───────────────────────────────┼─────────────────────────
 *  대상		  	│	같은 클래스, 상속관계 클래스 		│  	상속관계 클래스
 * ─────────────┼───────────────────────────────┼─────────────────────────
 *  메서드 이름		│	같음							│	같음
 * ─────────────┼───────────────────────────────┼─────────────────────────
 * 	매개변수		│	달라야 함						│	같아야 함
 * ─────────────┼───────────────────────────────┼─────────────────────────
 * 	리턴타입		│	상관없음						│ 	같아야 함
 * ─────────────┼───────────────────────────────┼─────────────────────────
 * 	접근제한자		│	상관없음						│	같거나 넓은 범위로 가능
 * ─────────────┼───────────────────────────────┼─────────────────────────
 * 	예외처리		│	상관없음						│	같거나 좁은 범위로 가능
 * ─────────────┼───────────────────────────────┼─────────────────────────
 * 	개념			│	메서드의 다형성					│	메서드의 재정의 (매개변수까지 똑같은데, 자손 class에서 재정의함)
 * 
 */
class Bike {
	int wheel;
	Bike(int wheel) {
		this.wheel = wheel;
	}
	String drive() {
		return "페달을 밟는다";
	}
	String stop() {
		return "브레이크를 밟는다";
	}
}
class AutoBike extends Bike {
	boolean power;
	AutoBike(int wheel) {
		super(wheel);
	}
	void power() {
		power = !power;
	}
	@Override //어노테이션. 오버라이딩 검증을 위한 어노테이션. 
			  //부모에 있는 메서드의 선언부와 자손부에 있는 메서드의 선언부가 같아야 함. 확인하기 위한 어노테이션
	String drive() {				//재사용
		return "출발 버튼을 누른다.";
	}
}
public class OverridingEx1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		AutoBike ab = new AutoBike(2);
		System.out.println(ab.drive());
	}

}
